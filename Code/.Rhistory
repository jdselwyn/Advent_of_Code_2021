3^3
tst[[5]]
tst[[1]]
distance_from_parent(tst[[1]], tst[[5]], 27)
tst <- accumulate(1:5, dispersal_positions, tau = 1, N = 3, f = test_fun, .init = 0.5)
distance_from_parent(tst[[1]], tst[[5]], 27)
n_per_gen ^ (gens - 1)
n_per_gen
gens
n_per_gen ^ (gens - 1)
reduce(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions) |> unlist() |> length()
reduce(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
n_per_gen ^ (gens - 1)
gens <- 2
n_per_gen <- 3
start_size <- 4
n_per_gen <- 3
gens <- 2
initial_parent_positions <- 1:start_size
reduce(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions) |> unlist() |> length()
n_per_gen ^ (gens - 1)
start_size * n_per_gen ^ (gens - 1)
start_size
accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions) |> unlist() |> length()
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
tmp
tmp[[2]]
tmp[[3]]
distance_dispersed(tmp[[3]], tmp[[2]], n_per_gen)
tmp[[2]]
tmp[[3]]
source("~/.active-rstudio-document", echo=TRUE)
initial_parent_positions
distance_dispersed(tmp[[3]], initial_parent_positions, start_size * n_per_gen ^ (gens - 1))
distance_dispersed(tmp[[3]], initial_parent_positions, n_per_gen ^ (gens - 1))
tmp[[1]]
tmp[[3]]
end_gen_pos <-tmp[[3]]
start_gen_pos <- tmp[[2]]
end_gen_pos
start_gen_pos
unlist(start_gen_pos)
start_gen_pos <- tmp[[1]]
unlist(start_gen_pos)
rep(unlist(start_gen_pos), each = 9)
unlist(end_gen_pos)
map2_dbl(unlist(end_gen_pos), rep(unlist(start_gen_pos), each = 9), ~abs(.x - .y))
gens
n_per_gen
distance_dispersed(tmp[[3]], tmp[[1]], n_per_gen ^ gens)
gens <- 5
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
distance_dispersed(tmp[[5]], tmp[[1]], n_per_gen ^ gens)
end_gen_pos <-tmp[[5]]
end_gen_pos
start_gen_pos <- tmp[[1]]
unlist(start_gen_pos)
sum(unlist(end_gen_pos) == 1)
map2_dbl(unlist(end_gen_pos), rep(unlist(start_gen_pos), each = 81), ~abs(.x - .y))
gens
n_per_gen
3^5
3*3*3
3*3*3*3
n_per_gen ^ (gens - 1)
gens <- 2
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
tmp[[3]]
n_per_gen
n_per_gen ^ (gens - 1)
distance_dispersed(tmp[[3]], tmp[[1]], n_per_gen ^ (gens - 1))
unlist(start_gen_pos)
sum(unlist(end_gen_pos) == 1)
end_gen_pos <-tmp[[3]]
start_gen_pos <- tmp[[1]]
unlist(start_gen_pos)
sum(unlist(end_gen_pos) == 1)
distance_dispersed(tmp[[3]], tmp[[1]], n_per_gen ^ (gens - 1))
distance_dispersed(tmp[[3]], tmp[[1]], n_per_gen ^ (gens))
n_per_gen ^ (gens - 1)
sum(unlist(end_gen_pos) == 1)
gens <- 5
sum(unlist(tmp[[1]]) == 1)
sum(unlist(tmp[[2]]) == 1)
sum(unlist(tmp[[3]]) == 1)
sum(unlist(tmp[[4]]) == 1)
gens <- 5
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
sum(unlist(tmp[[4]]) == 1)
sum(unlist(tmp[[5]]) == 1)
gens <- 10
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
sum(unlist(tmp[[5]]) == 1)
sum(unlist(tmp[[6]]) == 1)
81 * 3
distance_dispersed(tmp[[6]], tmp[[1]], 243)
243*3
sum(unlist(tmp[[7]]) == 1)
distance_dispersed(tmp[[7]], tmp[[1]], 729)
3^5
3^6
3^10
distance_dispersed(tmp[[10]], tmp[[1]], 59049)
3^(10-1)
distance_dispersed(tmp[[10]], tmp[[1]], 19683)
sum(unlist(tmp[[1]]) == 1)
sum(unlist(tmp[[2]]) == 1)
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
distance_dispersed(tmp[[length(tmp)]], tmp[[1]], n_per_gen ^ (gens - 1))
start_size <- 4
n_per_gen <- 3
gens <- 10
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
gens
length(tmp)
tmp[[length(tmp)]]
distance_dispersed(tmp[[length(tmp) - 1]], tmp[[1]], n_per_gen ^ (gens - 1))
distance_dispersed(tmp[[length(tmp)]], tmp[[1]], n_per_gen ^ (gens))
start_size <- 4
n_per_gen <- 3
gens <- 3
tmp <- accumulate(1:gens, dispersal_positions, tau = 0.67, N = n_per_gen, f = test_fun, .init = initial_parent_positions)
distance_dispersed(tmp[[length(tmp)]], tmp[[1]], n_per_gen ^ (gens))
length(tmp)
generational_dispersal_distance <- function(start_size, n_per_gen, gens, ...){
initial_parent_positions <- runif(start_size)
reduce(1:gens, dispersal_positions, ..., .init = initial_parent_positions) |> distance_dispersed(initial_parent_positions, N = n_per_gen ^ gens)
}
generational_dispersal_distance(4, 3, 3, tau = 0.67, f = rnorm)
generational_dispersal_distance(start_size = 4, n_per_gen = 3, gens = 3, tau = 0.67, f = rnorm)
generational_dispersal_distance(start_size = 4, n_per_gen = 3, N = 3, gens = 3, tau = 0.67, f = rnorm)
generational_dispersal_distance <- function(start_size, n_per_gen, gens, ...){
initial_parent_positions <- runif(start_size)
reduce(1:gens, dispersal_positions, N = n_per_gen, ..., .init = initial_parent_positions) |> distance_dispersed(initial_parent_positions, N = n_per_gen ^ gens)
}
generational_dispersal_distance(start_size = 4, n_per_gen = 3, N = 3, gens = 3, tau = 0.67, f = rnorm)
generational_dispersal_distance <- function(start_size, n_per_gen, gens, ...){
initial_parent_positions <- runif(start_size)
reduce(1:gens, dispersal_positions, ..., .init = initial_parent_positions) |> distance_dispersed(initial_parent_positions, N = n_per_gen ^ gens)
}
generational_dispersal_distance(start_size = 4, n_per_gen = 3, N = 3, gens = 3, tau = 0.67, f = rnorm)
generational_dispersal_distance <- function(start_size, n_per_gen, gens, ...){
initial_parent_positions <- runif(start_size)
reduce(1:gens, dispersal_positions, N = n_per_gen, ..., .init = initial_parent_positions) |> distance_dispersed(initial_parent_positions, N = n_per_gen ^ gens)
}
generational_dispersal_distance(start_size = 4, n_per_gen = 3, gens = 3, tau = 0.67, f = rnorm)
generational_dispersal_distance(start_size = 4, n_per_gen = 3, gens = 1, tau = 0.67, f = rnorm)
generational_dispersal_distance <- function(start_size, n_per_gen, gens, ...){
#Create distance apart vector for "gens" generations of Parents and Offspring
initial_parent_positions <- runif(start_size)
reduce(1:gens, dispersal_positions, N = n_per_gen, ..., .init = initial_parent_positions) |> distance_dispersed(initial_parent_positions, N = n_per_gen ^ gens)
}
po <- generational_dispersal_distance(start_size = 100, n_per_gen = 1000, gens = 1, tau = 0.67, f = rnorm)
po
gg <- generational_dispersal_distance(start_size = 100, n_per_gen = 1000, gens = 2, tau = 0.67, f = rnorm)
gg <- generational_dispersal_distance(start_size = 100, n_per_gen = 100, gens = 2, tau = 0.67, f = rnorm)
gggg <- generational_dispersal_distance(start_size = 100, n_per_gen = 10, gens = 2, tau = 0.67, f = rnorm)
gggg
gg
length(gg)
length(gg) == length(gggg)
length(gggg)
gggg <- generational_dispersal_distance(start_size = 10, n_per_gen = 100, gens = 2, tau = 0.67, f = rnorm)
length(gg) == length(gggg)
length(gggg)
gggg <- generational_dispersal_distance(start_size = 100, n_per_gen = 100, gens = 2, tau = 0.67, f = rnorm)
gggg
length(gg) == length(gggg)
length(gggg)
gggg <- generational_dispersal_distance(start_size = 100, n_per_gen = 10, gens = 3, tau = 0.67, f = rnorm)
length(gggg)
length(gg)
gggg <- generational_dispersal_distance(start_size = 10, n_per_gen = 100, gens = 3, tau = 0.67, f = rnorm)
gggg <- generational_dispersal_distance(start_size = 10, n_per_gen = 10, gens = 3, tau = 0.67, f = rnorm)
length(gg) == length(gggg)
length(gggg)
length(gg)
ggplot(po = po,
gg = gg,
gggg = gggg)
tibble(po = po,
gg = gg,
gggg = gggg)
tibble(po = sample(po, 1000),
gg = gg,
gggg = gggg)
tibble(po = sample(po, 1000, replace = TRUE),
gg = sample(gg, 1000, replace = TRUE),
gggg = sample(gggg, 1000, replace = TRUE))
tibble(po = sample(po, 1000, replace = TRUE),
gg = sample(gg, 1000, replace = TRUE),
gggg = sample(gggg, 1000, replace = TRUE)) %>%
pivot_longer()
tibble(po = sample(po, 1000, replace = TRUE),
gg = sample(gg, 1000, replace = TRUE),
gggg = sample(gggg, 1000, replace = TRUE)) %>%
pivot_longer(cols = everything())
tibble(po = sample(po, 1000, replace = TRUE),
gg = sample(gg, 1000, replace = TRUE),
gggg = sample(gggg, 1000, replace = TRUE)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_wrap(~name)
tibble(po = sample(po, 1000, replace = TRUE),
gg = sample(gg, 1000, replace = TRUE),
gggg = sample(gggg, 1000, replace = TRUE)) %>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_wrap(~name, ncol = 1)
gggg <- generational_dispersal_distance(start_size = 100, n_per_gen = 100, gens = 3, tau = 0.67, f = rnorm)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')))
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg'))) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_wrap(~name, ncol = 1)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_wrap(~name, ncol = 1)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3))
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c(value, other))
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c(value, other),
names_to = 'dispersal_class',
values_to = 'value')
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(dispersal_class ~ name)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c(value, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(dispersal_class ~ name)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything()) %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c(value, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(name ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(name = factor(name, levels = c('po', 'gg', 'gggg')),
other = case_when(name == 'po' ~ value,
name == 'gg' ~ value / 2,
name == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c('Distance Apart', other),
names_to = 'dispersal_class',
values_to = 'value')
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart')
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(`Distance Apart` = factor(`Distance Apart`, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ value,
`Distance Apart` == 'gg' ~ value / 2,
`Distance Apart` == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c('Distance Apart', other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(name ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(`Distance Apart` = factor(`Distance Apart`, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ value,
`Distance Apart` == 'gg' ~ value / 2,
`Distance Apart` == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c('Distance Apart', other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(`Distance Apart` ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(`Distance Apart` = factor(`Distance Apart`, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ value,
`Distance Apart` == 'gg' ~ value / 2,
`Distance Apart` == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c('Distance Apart', other),
names_to = 'dispersal_class',
values_to = 'value')
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(`Distance Apart` = factor(`Distance Apart`, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ value,
`Distance Apart` == 'gg' ~ value / 2,
`Distance Apart` == 'gggg' ~ value / 3))
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'Distance Apart') %>%
mutate(`Distance Apart` = factor(`Distance Apart`, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ value,
`Distance Apart` == 'gg' ~ value / 2,
`Distance Apart` == 'gggg' ~ value / 3)) %>%
pivot_longer(cols = c(value, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(`Distance Apart` ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
values_to = 'Distance Apart')
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ `Distance Apart`,
`Distance Apart` == 'gg' ~ `Distance Apart` / 2,
`Distance Apart` == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(`Distance Apart` ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(`Distance Apart` == 'po' ~ `Distance Apart`,
`Distance Apart` == 'gg' ~ `Distance Apart` / 2,
`Distance Apart` == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(relationship ~ dispersal_class)
tibble(po = sample(po, 1000, replace = FALSE),
gg = sample(gg, 1000, replace = FALSE),
gggg = sample(gggg, 1000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2,
relationship == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(relationship ~ dispersal_class)
tibble(po = sample(po, 10000, replace = FALSE),
gg = sample(gg, 10000, replace = FALSE),
gggg = sample(gggg, 10000, replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2,
relationship == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(relationship ~ dispersal_class)
po
tibble(po = sample(po, length(po), replace = FALSE),
gg = sample(gg, length(po), replace = FALSE),
gggg = sample(gggg, length(po), replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2,
relationship == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 50) +
facet_grid(relationship ~ dispersal_class)
tibble(po = sample(po, length(po), replace = FALSE),
gg = sample(gg, length(po), replace = FALSE),
gggg = sample(gggg, length(po), replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
other = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2,
relationship == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, other),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 100) +
facet_grid(relationship ~ dispersal_class)
tibble(po = sample(po, length(po), replace = FALSE),
gg = sample(gg, length(po), replace = FALSE),
gggg = sample(gggg, length(po), replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
`Transformed Distance` = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2,
relationship == 'gggg' ~ `Distance Apart` / 3)) %>%
pivot_longer(cols = c(`Distance Apart`, `Transformed Distance`),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 100) +
facet_grid(relationship ~ dispersal_class)
po <- generational_dispersal_distance(start_size = 100, n_per_gen = 1000, gens = 1, tau = 0.67, f = rnorm)
gg <- generational_dispersal_distance(start_size = 100, n_per_gen = 1000, gens = 2, tau = 0.67, f = rnorm)
tibble(po = sample(po, length(po), replace = FALSE),
gg = sample(gg, length(po), replace = FALSE)) %>%
pivot_longer(cols = everything(),
names_to = 'relationship',
values_to = 'Distance Apart') %>%
mutate(relationship = factor(relationship, levels = c('po', 'gg', 'gggg')),
`Transformed Distance` = case_when(relationship == 'po' ~ `Distance Apart`,
relationship == 'gg' ~ `Distance Apart` / 2)) %>%
pivot_longer(cols = c(`Distance Apart`, `Transformed Distance`),
names_to = 'dispersal_class',
values_to = 'value') %>%
ggplot(aes(x = value)) +
geom_histogram(bins = 1000) +
facet_grid(relationship ~ dispersal_class)
